name: Auto Generate OpenWrt/ImmortalWrt Config

on:
  workflow_dispatch:
    inputs:
      firmware:
        description: '选择固件类型'
        required: true
        default: 'immortalwrt-master'
        type: choice
        options:
          - openwrt-main
          - immortalwrt-master
      device:
        description: '选择设备型号'
        required: true
        default: 'xiaomi_mi-router-wr30u-stock'
        type: choice
        options:
          - xiaomi_mi-router-wr30u-stock
          - xiaomi_mi-router-wr30u-ubootmod
          - xiaomi_mi-router-wr30u-112m-nmbm
          - xiaomi_mi-router-cr6608
      version:
        description: '指定版本（为空则使用最新版）'
        required: false
        type: string

jobs:
  generate-config:
    runs-on: ubuntu-24.04
    steps:
      # 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 安装依赖
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

      # 设置固件源和克隆仓库
      - name: Clone firmware repository
        run: |
          if [ "${{ github.event.inputs.firmware }}" = "openwrt-main" ]; then
            REPO_URL="https://github.com/openwrt/openwrt.git"
            BRANCH="main"
          else
            REPO_URL="https://github.com/immortalwrt/immortalwrt.git"
            BRANCH="master"
          fi
          if [ -n "${{ github.event.inputs.version }}" ]; then
            git clone --depth 1 -b "${{ github.event.inputs.version }}" $REPO_URL openwrt
          else
            git clone --depth 1 -b $BRANCH $REPO_URL openwrt
          fi

      # 进入固件目录并更新 feeds
      - name: Update and install feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 自动选择设备架构并生成设备特定的 .config 文件
      - name: Generate device-specific config
        working-directory: ./openwrt
        run: |
          # 根据设备型号设置目标架构、子目标和设备配置
          case "${{ github.event.inputs.device }}" in
            "xiaomi_mi-router-wr30u-stock")
              TARGET="mediatek"
              SUBTARGET="filogic"
              DEVICE="xiaomi_mi-router-wr30u-stock"
              ;;
            "xiaomi_mi-router-wr30u-ubootmod")
              TARGET="mediatek"
              SUBTARGET="filogic"
              DEVICE="xiaomi_mi-router-wr30u-ubootmod"
              ;;
            "xiaomi_mi-router-wr30u-112m-nmbm")
              TARGET="mediatek"
              SUBTARGET="filogic"
              DEVICE="xiaomi_mi-router-wr30u-112m-nmbm"
              ;;
            "xiaomi_mi-router-cr6608")
              TARGET="mediatek"
              SUBTARGET="mt7622"
              DEVICE="xiaomi_mi-router-cr6608"
              ;;
            *)
              echo "未知设备型号"
              exit 1
              ;;
          esac

          # 创建初始 .config 文件并设置目标架构和设备
          echo "CONFIG_TARGET_${TARGET}=y" > .config
          echo "CONFIG_TARGET_${TARGET}_${SUBTARGET}=y" >> .config
          echo "CONFIG_TARGET_${TARGET}_${SUBTARGET}_${DEVICE}=y" >> .config

          # 运行 make defconfig 生成完整的设备特定配置文件
          make defconfig

          # 保存配置文件到指定路径
          mkdir -p ../config/${{ github.event.inputs.firmware }}/${{ github.event.inputs.device }}
          cp .config ../config/${{ github.event.inputs.firmware }}/${{ github.event.inputs.device }}/config

      # 提交生成的配置文件到仓库
      - name: Commit and push config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add config/
          git commit -m "Add config for ${{ github.event.inputs.firmware }}/${{ github.event.inputs.device }}"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
