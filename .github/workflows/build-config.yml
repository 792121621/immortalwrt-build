name: Fetch OpenWrt/ImmortalWrt Config

on:
  workflow_dispatch:
    inputs:
      firmware:
        description: '选择固件类型'
        required: true
        default: 'all'
        type: choice
        options:
          - openwrt-main
          - immortalwrt-master
          - all
      device:
        description: '选择设备型号'
        required: true
        default: 'all'
        type: choice
        options:
          - xiaomi_mi-router-wr30u-stock
          - xiaomi_mi-router-wr30u-ubootmod
          - xiaomi_mi-router-wr30u-112m-nmbm
          - xiaomi_mi-router-cr6608
          - all
      version:
        description: '指定版本（为空使用最新版本）'
        required: false
        type: string

jobs:
  fetch-config:
    runs-on: ubuntu-24.04
    steps:
      # 检出代码仓库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 安装依赖
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

      # 设置环境变量
      - name: Set environment variables
        run: |
          echo "FIRMWARE=${{ inputs.firmware }}" >> $GITHUB_ENV
          echo "DEVICE=${{ inputs.device }}" >> $GITHUB_ENV
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV

      # 克隆 OpenWrt 仓库并生成 config
      - name: Clone and generate OpenWrt config
        if: env.FIRMWARE == 'openwrt-main' || env.FIRMWARE == 'all'
        run: |
          # 克隆 OpenWrt 主分支
          git clone https://github.com/openwrt/openwrt.git openwrt
          cd openwrt
          # 如果指定了版本，切换到该版本
          if [ -n "${{ env.VERSION }}" ]; then
            git checkout ${{ env.VERSION }}
          fi
          # 更新 feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          # 根据设备生成 config
          if [ "${{ env.DEVICE }}" == "all" ]; then
            DEVICES="xiaomi_mi-router-wr30u-stock xiaomi_mi-router-wr30u-ubootmod xiaomi_mi-router-wr30u-112m-nmbm xiaomi_mi-router-cr6608"
          else
            DEVICES="${{ env.DEVICE }}"
          fi
          for device in $DEVICES; do
            make defconfig
            # 自动识别架构（基于设备的目标配置文件）
            make menuconfig # 这里需要根据设备选择正确的 target，实际需脚本化处理
            mkdir -p ../config/openwrt-main/$device
            cp .config ../config/openwrt-main/$device/config
          done

      # 克隆 ImmortalWrt 仓库并生成 config
      - name: Clone and generate ImmortalWrt config
        if: env.FIRMWARE == 'immortalwrt-master' || env.FIRMWARE == 'all'
        run: |
          # 克隆 ImmortalWrt 主分支
          git clone https://github.com/immortalwrt/immortalwrt.git immortalwrt
          cd immortalwrt
          # 如果指定了版本，切换到该版本
          if [ -n "${{ env.VERSION }}" ]; then
            git checkout ${{ env.VERSION }}
          fi
          # 更新 feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          # 根据设备生成 config
          if [ "${{ env.DEVICE }}" == "all" ]; then
            DEVICES="xiaomi_mi-router-wr30u-stock xiaomi_mi-router-wr30u-ubootmod xiaomi_mi-router-wr30u-112m-nmbm xiaomi_mi-router-cr6608"
          else
            DEVICES="${{ env.DEVICE }}"
          fi
          for device in $DEVICES; do
            make defconfig
            # 自动识别架构（基于设备的目标配置文件）
            make menuconfig # 这里需要根据设备选择正确的 target，实际需脚本化处理
            mkdir -p ../config/immortalwrt-master/$device
            cp .config ../config/immortalwrt-master/$device/config
          done

      # 提交 config 文件到仓库
      - name: Commit and push config files
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add config/
          git commit -m "Update config files for ${{ env.FIRMWARE }} ${{ env.DEVICE }}"
          git push origin main
