name: Generate OpenWrt/ImmortalWrt Config

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "选择源码分支"
        required: true
        default: "immortalwrt-master"
        type: choice
        options:
          - all
          - openwrt-main
          - immortalwrt-master
      openwrt_board:
        description: "选择设备型号"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - xiaomi_wr30u_stock
          - xiaomi_wr30u_ubootmod
          - xiaomi_wr30u_nmbm
          - xiaomi_cr6608
      openwrt_version:
        description: "指定版本（例如 v23.05.3），留空使用最新版"
        required: false
        default: ""

jobs:
  generate-config:
    runs-on: ubuntu-24.04
    steps:
      # 检出当前仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 安装编译所需依赖
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

      # 设置源码仓库并克隆
      # 1. 创建 config 目录
      # 2. 定义 OpenWrt 和 ImmortalWrt 的仓库地址及分支
      # 3. 根据输入克隆对应仓库
      - name: Setup repositories
        run: |
          mkdir -p config
          # 定义仓库
          declare -A repos
          repos["openwrt-main"]="https://github.com/openwrt/openwrt.git main"
          repos["immortalwrt-master"]="https://github.com/immortalwrt/immortalwrt.git master"

          # 克隆选定的仓库
          if [[ "${{ github.event.inputs.source_branch }}" == "all" ]]; then
            branches=("openwrt-main" "immortalwrt-master")
          else
            branches=("${{ github.event.inputs.source_branch }}")
          fi

          for branch in "${branches[@]}"; do
            repo_url=$(echo ${repos[$branch]} | cut -d' ' -f1)
            repo_branch=$(echo ${repos[$branch]} | cut -d' ' -f2)
            git clone --depth 1 -b $repo_branch $repo_url ${branch}
          done

      # 生成配置文件
      # 1. 根据输入确定设备型号列表
      # 2. 根据输入确定源码分支列表
      # 3. 遍历分支和设备型号，更新 feeds、生成配置并保存
      - name: Generate config
        run: |
          boards=()
          if [[ "${{ github.event.inputs.openwrt_board }}" == "all" ]]; then
            boards=("xiaomi_wr30u_stock" "xiaomi_wr30u_ubootmod" "xiaomi_wr30u_nmbm" "xiaomi_cr6608")
          else
            boards=("${{ github.event.inputs.openwrt_board }}")
          fi

          branches=()
          if [[ "${{ github.event.inputs.source_branch }}" == "all" ]]; then
            branches=("openwrt-main" "immortalwrt-master")
          else
            branches=("${{ github.event.inputs.source_branch }}")
          fi

          for branch in "${branches[@]}"; do
            for board in "${boards[@]}"; do
              cd ${branch}
              # 更新并安装 feeds
              ./scripts/feeds update -a
              ./scripts/feeds install -a

              # 如果指定了版本号，则切换到对应版本
              if [[ -n "${{ github.event.inputs.openwrt_version }}" ]]; then
                git checkout v${{ github.event.inputs.openwrt_version }}
              fi

              # 生成默认配置
              make defconfig

              # 保存配置
              mkdir -p ../config/${branch}/${board}
              cp .config ../config/${branch}/${board}/config
              cd ..
            done
          done

      # 上传生成的配置文件
      - name: Upload configs
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-configs
          path: config/
