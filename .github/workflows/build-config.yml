name: Build OpenWrt and ImmortalWrt Config

on:
  workflow_dispatch:
    inputs:
      firmware:
        description: '选择固件类型'
        required: true
        type: choice
        options:
          - openwrt-main
          - immortalwrt-master
          - all
      device:
        description: '选择设备型号'
        required: true
        type: choice
        options:
          - Xiaomi Mi Router WR30U (stock layout)
          - Xiaomi Mi Router WR30U (OpenWrt U-Boot layout)
          - Xiaomi Mi Router WR30U (112M UBI with NMBM-Enabled layout)
          - Xiaomi Mi Router CR6608
          - all
      version:
        description: '指定版本（为空则使用最新版本）'
        required: false
        type: string

jobs:
  build-config:
    runs-on: ubuntu-24.04
    steps:
      # 步骤1：检出代码仓库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤2：安装依赖
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

      # 步骤3：设置工作目录并克隆固件源码
      - name: Clone firmware repositories
        run: |
          mkdir -p config
          # 根据输入选择克隆 openwrt-main、immortalwrt-master 或两者
          if [[ "${{ github.event.inputs.firmware }}" == "openwrt-main" || "${{ github.event.inputs.firmware }}" == "all" ]]; then
            git clone https://git.openwrt.org/openwrt/openwrt.git openwrt-main
            # 如果指定了版本，切换到指定版本
            if [ -n "${{ github.event.inputs.version }}" ]; then
              cd openwrt-main
              git checkout ${{ github.event.inputs.version }}
              cd ..
            fi
          fi
          if [[ "${{ github.event.inputs.firmware }}" == "immortalwrt-master" || "${{ github.event.inputs.firmware }}" == "all" ]]; then
            git clone https://github.com/immortalwrt/immortalwrt.git immortalwrt-master
            if [ -n "${{ github.event.inputs.version }}" ]; then
              cd immortalwrt-master
              git checkout ${{ github.event.inputs.version }}
              cd ..
            fi
          fi

      # 步骤4：生成设备配置文件
      - name: Generate config for selected devices
        run: |
          # 定义设备配置文件路径
          declare -A devices
          devices["Xiaomi Mi Router WR30U (stock layout)"]="xiaomi_wr30u_stock"
          devices["Xiaomi Mi Router WR30U (OpenWrt U-Boot layout)"]="xiaomi_wr30u_ubootmod"
          devices["Xiaomi Mi Router WR30U (112M UBI with NMBM-Enabled layout)"]="xiaomi_wr30u_nmbm"
          devices["Xiaomi Mi Router CR6608"]="xiaomi_cr6608"

          # 遍历固件类型
          for firmware in openwrt-main immortalwrt-master; do
            if [[ "${{ github.event.inputs.firmware }}" != "all" && "${{ github.event.inputs.firmware }}" != "$firmware" ]]; then
              continue
            fi
            if [ ! -d "$firmware" ]; then
              continue
            fi
            cd $firmware
            # 更新 feeds
            ./scripts/feeds update -a
            ./scripts/feeds install -a

            # 根据设备选择生成配置文件
            if [[ "${{ github.event.inputs.device }}" == "all" ]]; then
              for device in "${!devices[@]}"; do
                target=${devices[$device]}
                make defconfig
                # 生成配置文件并保存到指定路径
                mkdir -p ../config/$firmware/$target
                cp .config ../config/$firmware/$target/config
              done
            else
              target=${devices["${{ github.event.inputs.device }}"]}
              make defconfig
              # 生成配置文件并保存到指定路径
              mkdir -p ../config/$firmware/$target
              cp .config ../config/$firmware/$target/config
            fi
            cd ..
          done

      # 步骤5：上传生成的配置文件
      - name: Upload config artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-configs
          path: config/
