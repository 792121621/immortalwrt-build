name: Build OpenWrt/ImmortalWrt Config

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "选择源码分支"
        required: true
        default: "openwrt-main"
        type: choice
        options:
          - openwrt-main
          - immortalwrt-master
      openwrt_board:
        description: "选择设备型号"
        required: true
        default: "xiaomi_wr30u_stock"
        type: choice
        options:
          - xiaomi_wr30u_stock
          - xiaomi_wr30u_ubootmod
          - xiaomi_wr30u_nmbm
          - xiaomi_cr6608
          - all
      openwrt_version:
        description: "指定版本（例如 v23.05.3），留空使用最新版"
        required: false
        default: ""

jobs:
  build-config:
    runs-on: ubuntu-24.04
    steps:
      # 检出代码仓库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
            python3 python3-pip unzip zlib1g-dev file rsync subversion swig \
            libelf-dev
          sudo pip3 install -U pip
          sudo pip3 install pyyaml

      # 设置源码仓库和分支
      - name: Setup source repository
        run: |
          if [ "${{ github.event.inputs.source_branch }}" == "openwrt-main" ]; then
            git clone https://github.com/openwrt/openwrt.git source
            cd source
            git checkout main
          else
            git clone https://github.com/immortalwrt/immortalwrt.git source
            cd source
            git checkout master
          fi
          # 如果指定了版本，切换到对应版本
          if [ -n "${{ github.event.inputs.openwrt_version }}" ]; then
            git checkout ${{ github.event.inputs.openwrt_version }}
          fi

      # 更新和安装 feeds
      - name: Update and install feeds
        run: |
          cd source
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 生成默认配置
      - name: Generate default config
        run: |
          cd source
          # 定义所有设备型号
          BOARDS="xiaomi_wr30u_stock xiaomi_wr30u_ubootmod xiaomi_wr30u_nmbm xiaomi_cr6608"
          
          # 如果选择 all，循环生成所有设备的配置
          if [ "${{ github.event.inputs.openwrt_board }}" == "all" ]; then
            for BOARD in $BOARDS; do
              echo "Generating config for $BOARD"
              case "$BOARD" in
                "xiaomi_wr30u_stock")
                  make defconfig BOARD=mediatek/filogic
                  ;;
                "xiaomi_wr30u_ubootmod")
                  make defconfig BOARD=mediatek/filogic
                  ;;
                "xiaomi_wr30u_nmbm")
                  make defconfig BOARD=mediatek/filogic
                  ;;
                "xiaomi_cr6608")
                  make defconfig BOARD=mediatek/mt7622
                  ;;
              esac
              # 保存配置
              mkdir -p ../config/${{ github.event.inputs.source_branch }}/$BOARD
              cp .config ../config/${{ github.event.inputs.source_branch }}/$BOARD/config
            done
          else
            # 单一设备型号生成配置
            case "${{ github.event.inputs.openwrt_board }}" in
              "xiaomi_wr30u_stock")
                make defconfig BOARD=mediatek/filogic
                ;;
              "xiaomi_wr30u_ubootmod")
                make defconfig BOARD=mediatek/filogic
                ;;
              "xiaomi_wr30u_nmbm")
                make defconfig BOARD=mediatek/filogic
                ;;
              "xiaomi_cr6608")
                make defconfig BOARD=mediatek/mt7622
                ;;
            esac
            # 保存配置
            mkdir -p ../config/${{ github.event.inputs.source_branch }}/${{ github.event.inputs.openwrt_board }}
            cp .config ../config/${{ github.event.inputs.source_branch }}/${{ github.event.inputs.openwrt_board }}/config
          fi

      # 保存配置到仓库
      - name: Save config to repository
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add config/
          git commit -m "Add config for ${{ github.event.inputs.source_branch }}/${{ github.event.inputs.openwrt_board }}"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 清理工作目录
      - name: Cleanup
        run: |
          rm -rf source
