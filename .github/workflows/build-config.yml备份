name: Generate Config Files

on:
  workflow_dispatch:
    inputs:
      firmware:
        description: '固件选择'
        required: true
        default: 'all'
        type: choice
        options:
          - openwrt-main
          - immortalwrt-master
          - all
      model:
        description: '型号选择'
        required: true
        default: 'all'
        type: choice
        options:
          - xiaomi_mi-router-wr30u-stock
          - xiaomi_mi-router-wr30u-ubootmod
          - xiaomi_mi-router-wr30u-112m-nmbm
          - xiaomi_mi-router-cr6608
          - all
      version:
        description: '版本选择（留空使用最新版）'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Install Dependencies
        # 安装编译所需的依赖工具
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

      - name: Clone Repositories
        # 根据固件选择克隆对应的仓库
        run: |
          if [ "${{ github.event.inputs.firmware }}" == "openwrt-main" ] || [ "${{ github.event.inputs.firmware }}" == "all" ]; then
            git clone https://github.com/openwrt/openwrt.git openwrt-main
          fi
          if [ "${{ github.event.inputs.firmware }}" == "immortalwrt-master" ] || [ "${{ github.event.inputs.firmware }}" == "all" ]; then
            git clone https://github.com/immortalwrt/immortalwrt.git immortalwrt-master
          fi

      - name: Checkout Version
        # 如果指定了版本，则切换到该版本
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            if [ -d "openwrt-main" ]; then
              cd openwrt-main
              git checkout ${{ github.event.inputs.version }}
              cd ..
            fi
            if [ -d "immortalwrt-master" ]; then
              cd immortalwrt-master
              git checkout ${{ github.event.inputs.version }}
              cd ..
            fi
          fi

      - name: Generate Config Files
        # 使用 make 生成 config 文件
        run: |
          mkdir -p config
          if [ "${{ github.event.inputs.firmware }}" == "openwrt-main" ] || [ "${{ github.event.inputs.firmware }}" == "all" ]; then
            cd openwrt-main
            # 使用 make defconfig 生成默认配置
            make defconfig
            # 保存生成的 .config 文件
            mkdir -p ../config/openwrt-main/${{ github.event.inputs.model }}
            cp .config ../config/openwrt-main/${{ github.event.inputs.model }}/config
            cd ..
          fi
          if [ "${{ github.event.inputs.firmware }}" == "immortalwrt-master" ] || [ "${{ github.event.inputs.firmware }}" == "all" ]; then
            cd immortalwrt-master
            # 使用 make defconfig 生成默认配置
            make defconfig
            # 保存生成的 .config 文件
            mkdir -p ../config/immortalwrt-master/${{ github.event.inputs.model }}
            cp .config ../config/immortalwrt-master/${{ github.event.inputs.model }}/config
            cd ..
          fi

      - name: Upload Config Files
        # 将生成的 config 文件上传为 artifact
        uses: actions/upload-artifact@v4
        with:
          name: config-files
          path: config/
