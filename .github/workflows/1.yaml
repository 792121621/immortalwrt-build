#============================================================================================
# Customized Workflow: Compile OpenWrt firmware for WR30U & CR6608
#============================================================================================

name: WR30U & CR6608 OpenWrt Build

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "选择源码分支 (openwrt-main / immortalwrt-master / all)"
        required: false
        default: "openwrt-main"
      version:
        description: "选择编译版本（留空使用最新版本）"
        required: false
        default: ""
      device:
        description: "设备型号 (wr30u-stock, wr30u-uboot, wr30u-ubi, cr6608, all)"
        required: false
        default: "all"
        type: choice
        options:
          - wr30u-stock
          - wr30u-uboot
          - wr30u-ubi
          - cr6608
          - all

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      # 中文注释：拉取源码
      - name: Checkout
        uses: actions/checkout@v3

      # 中文注释：初始化编译环境
      - name: 初始化编译环境
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
            python3-setuptools rsync swig unzip zlib1g-dev file wget

      # 中文注释：克隆源码
      - name: 克隆源码
        run: |
          case "${{ inputs.source_branch }}" in
            openwrt-main)
              git clone --depth=1 -b main https://github.com/openwrt/openwrt.git openwrt
              ;;
            immortalwrt-master)
              git clone --depth=1 -b master https://github.com/immortalwrt/immortalwrt.git openwrt
              ;;
            all)
              git clone --depth=1 -b main https://github.com/openwrt/openwrt.git openwrt
              git clone --depth=1 -b master https://github.com/immortalwrt/immortalwrt.git immortalwrt
              ;;
            *)
              echo "未知分支" && exit 1
              ;;
          esac

      # 中文注释：选择配置文件（架构）
      - name: 复制官方config和DTS文件
        run: |
          mkdir -p config_files
          case "${{ inputs.device }}" in
            wr30u-stock)
              cp openwrt/target/linux/mediatek/filogic/config-* config_files/.config
              cp openwrt/target/linux/mediatek/dts/mt7981b-xiaomi-mi-router-wr30u-stock.dts config_files/
              ;;
            wr30u-uboot)
              cp openwrt/target/linux/mediatek/filogic/config-* config_files/.config
              cp openwrt/target/linux/mediatek/dts/mt7981b-xiaomi-mi-router-wr30u-uboot.dts config_files/
              ;;
            wr30u-ubi)
              cp openwrt/target/linux/mediatek/filogic/config-* config_files/.config
              cp openwrt/target/linux/mediatek/dts/mt7981b-xiaomi-mi-router-wr30u-nmbm.dts config_files/
              ;;
            cr6608)
              cp openwrt/target/linux/ramips/mt7621/config-* config_files/.config
              cp openwrt/target/linux/ramips/dts/mt7621-xiaomi-cr6608.dts config_files/
              ;;
            all)
              echo "将构建所有支持的设备"
              ;;
            *)
              echo "未知设备类型" && exit 1
              ;;
          esac

      # 中文注释：更新并安装feeds
      - name: 安装Feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 中文注释：配置与编译
      - name: 配置与编译
        run: |
          cd openwrt
          cp ../config_files/.config .config || echo "使用默认配置"
          make defconfig
          make download -j$(nproc)
          make -j$(nproc) V=s || make -j1 V=s

      # 中文注释：打包输出
      - name: 整理输出
        run: |
          mkdir -p output
          cp -rf openwrt/bin/targets/*/*/*.bin output/ || true
          cp -rf openwrt/bin/targets/*/*/*.img output/ || true
          cp -rf openwrt/.config output/

      # 中文注释：上传固件至Release
      - name: 上传固件至Release
        uses: ncipollo/release-action@main
        with:
          tag: openwrt-${{ inputs.device }}-${{ inputs.source_branch }}-${{ github.run_number }}
          artifacts: output/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            ### 固件信息
            - 默认 IP: 192.168.1.1
            - 用户名: root
            - 密码: password
            - 编译分支: ${{ inputs.source_branch }}
            - 设备: ${{ inputs.device }}
            - 版本: ${{ inputs.version }}
            - 内核: 官方默认配置

