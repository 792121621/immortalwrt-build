name: OpenWrt Router Build

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "选择源码分支"
        required: false
        default: "openwrt-main"
        type: choice
        options:
          - openwrt-main
          - immortalwrt-master
          - all

      target_device:
        description: "选择设备"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - wr30u-stock
          - wr30u-uboot
          - wr30u-112m
          - cr6608

      custom_version:
        description: "自定义版本号（留空为最新）"
        required: false
        default: ""
        type: string

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 初始化环境
        run: |
          # 使用固定依赖环境
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

      - name: 克隆源码
        run: |
          case "${{ inputs.source_branch }}" in
            openwrt-main)
              REPO="https://github.com/openwrt/openwrt"
              BRANCH="main"
              TAG="official"
              ;;
            immortalwrt-master)
              REPO="https://github.com/immortalwrt/immortalwrt"
              BRANCH="master"
              TAG="immortalwrt"
              ;;
            all)
              REPO="https://github.com/openwrt/openwrt"
              BRANCH="main"
              TAG="multi"
              ;;
          esac

          git clone --depth=1 -b $BRANCH $REPO openwrt

      - name: 设置设备配置
        run: |
          cd openwrt
          DEVICE="${{ inputs.target_device }}"
          case "$DEVICE" in
            wr30u-stock)
              TARGET="mediatek/filogic"
              DEVICE_NAME="mt7981b-xiaomi-mi-router-wr30u-stock"
              ;;
            wr30u-uboot)
              TARGET="mediatek/filogic"
              DEVICE_NAME="mt7981b-xiaomi-mi-router-wr30u-uboot"
              ;;
            wr30u-112m)
              TARGET="mediatek/filogic"
              DEVICE_NAME="mt7981b-xiaomi-mi-router-wr30u-nmbm"
              ;;
            cr6608)
              TARGET="ramips/mt7621"
              DEVICE_NAME="mt7621-xiaomi-mi-router-cr6608"
              ;;
            all)
              echo "构建全部设备"
              TARGET=""
              DEVICE_NAME=""
              ;;
            *)
              echo "未知设备"
              exit 1
              ;;
          esac

          if [[ -n "$DEVICE_NAME" ]]; then
            echo "CONFIG_TARGET_$(echo $TARGET | cut -d/ -f1)=y" >> .config
            echo "CONFIG_TARGET_$(echo $TARGET | tr / _)=y" >> .config
            echo "CONFIG_TARGET_DEVICE_$(echo $TARGET | tr / _)_${DEVICE_NAME}=y" >> .config
          fi

      - name: 更新源并安装软件包
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 下载依赖包
        run: |
          cd openwrt
          make defconfig
          make download -j$(nproc)

      - name: 编译固件
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s

      - name: 整理输出文件
        run: |
          cd openwrt
          mkdir -p output
          cp -rf bin/targets/*/* output/

      - name: 上传 Release
        uses: ncipollo/release-action@main
        with:
          tag: ${{ inputs.custom_version || format('openwrt_{0}_{1}', inputs.source_branch, github.run_id) }}
          artifacts: openwrt/output/**/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            ### 编译信息
            - 设备: ${{ inputs.target_device }}
            - 源码分支: ${{ inputs.source_branch }}
            - 编译版本: ${{ inputs.custom_version || 'latest' }}
            - 默认地址: 192.168.1.1 / root / password
