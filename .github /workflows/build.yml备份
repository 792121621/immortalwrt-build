#============================================================================================
# Description: 编译 Xiaomi Mi Router WR30U 和 CR6608 的 OpenWrt 和 ImmortalWrt 固件
#============================================================================================

name: 路由器固件编译

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select the source branch"
        required: false
        default: "immortalwrt-master"
        type: choice
        options:
          - openwrt-main
          - immortalwrt-master
      openwrt_board:
        description: "Select router model"
        required: true
        type: choice
        options:
          - xiaomi_wr30u_stock
          - xiaomi_wr30u_ubootmod
          - xiaomi_wr30u_nmbm
          - xiaomi_cr6608
      openwrt_version:
        description: "Select OpenWrt/ImmortalWrt version (leave empty for latest)"
        required: false
        default: ""
        type: string
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      builder_name:
        description: "Set firmware builder signature"
        required: false
        default: "angel"
        type: choice
        options:
          - angel
          - yourname

env:
  FEEDS_CONF: config/${{ inputs.source_branch }}/feeds.conf.default
  CONFIG_FILE: config/${{ inputs.source_branch }}/${{ inputs.openwrt_board }}.config
  DIY_P1_SH: config/${{ inputs.source_branch }}/diy-part1.sh
  DIY_P2_SH: config/${{ inputs.source_branch }}/diy-part2.sh
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    # runs-on: ubuntu-latest
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo mkdir -p /workdir
          sudo chown ${USER}:${GROUPS} /workdir
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Clone source code [ ${{ inputs.source_branch }} ]
        id: codes
        working-directory: /workdir
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          # Set up compilation source code
          if [[ "${{ inputs.source_branch }}" == *"openwrt"* ]]; then
              REPO_URL="https://github.com/openwrt/openwrt"
              REPO_BRANCH="${{ inputs.openwrt_version || 'main' }}"
              TAGS_NAME="openwrt"
          elif [[ "${{ inputs.source_branch }}" == *"immortalwrt"* ]]; then
              REPO_URL="https://github.com/immortalwrt/immortalwrt"
              REPO_BRANCH="${{ inputs.openwrt_version || 'master' }}"
              TAGS_NAME="immortalwrt"
          else
              echo "Unknown source code repository."
              exit 1
          fi

          # Clone source code
          if [[ -n "${{ inputs.openwrt_version }}" ]]; then
              git clone -q --single-branch --branch=${REPO_BRANCH} ${REPO_URL} openwrt
          else
              git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
          fi
          ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

          # Set target architecture based on board
          case "${{ inputs.openwrt_board }}" in
              xiaomi_wr30u_stock|xiaomi_wr30u_ubootmod|xiaomi_wr30u_nmbm)
                  echo "ARCH=mediatek/filogic" >> ${GITHUB_OUTPUT}
                  ;;
              xiaomi_cr6608)
                  echo "ARCH=ramips/mt7621" >> ${GITHUB_OUTPUT}
                  ;;
              *)
                  echo "Unsupported board!"
                  exit 1
                  ;;
          esac

          # Set output information
          echo "build_tag=${TAGS_NAME}_${{ inputs.openwrt_board }}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
          echo -e "REPO_URL: [ ${REPO_URL} ]\nREPO_BRANCH: [ ${REPO_BRANCH} ]\nTAGS_NAME: [ ${TAGS_NAME} ]"
          df -hT ${PWD}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Load custom feeds
        run: |
          [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${DIY_P1_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P1_SH}

      - name: Update feeds
        run: cd openwrt/ && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt/ && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${DIY_P2_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Download package
        id: package
        run: |
          cd openwrt/
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt/
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Clear server space
        id: clean
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        run: |
          # Clean up server space
          cd openwrt/
          mkdir output
          cp -f bin/targets/*/*/*.bin output/
          cp -f bin/targets/*/*/*.ubi output/
          cp -f .config output/config
          rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null

          # Generate sha256sum file
          cd output/
          for file in *; do [[ ! -d "${file}" ]] && sha256sum "${file}" >"${file}.sha"; done

          # Set output information
          df -hT ${PWD}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload firmware to Release
        uses: ncipollo/release-action@main
        if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.codes.outputs.build_tag }}
          artifacts: openwrt/output/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            ### Firmware Information
            - Default IP: 192.168.1.1
            - Default username: root
            - Default password: none
            - Supported router: ${{ inputs.openwrt_board }}
            ### Firmware Verification
            - sha256sum
